description = 'Spring Cloud IOT Samples Common'

configurations.archives.artifacts.removeAll { it.archiveTask.is jar }
tasks.findByPath("artifactoryPublish")?.enabled = false

project('spring-cloud-iot-samples-sunfounder-sensor-01-dualcolorled') {
	description = 'Spring Cloud IoT Sunfounder Sensor Kit Sample 1'
	dependencies {
		compile project(":spring-cloud-iot-core")
		compile project(":spring-cloud-iot-boot")
		compile('org.springframework.boot:spring-boot-starter')
		compile project(":spring-cloud-iot-samples-common")
	}
}

project('spring-cloud-iot-samples-sunfounder-sensor-04-relay') {
	description = 'Spring Cloud IoT Sunfounder Sensor Kit Sample 4'
	dependencies {
		compile project(":spring-cloud-iot-core")
		compile project(":spring-cloud-iot-boot")
		compile('org.springframework.boot:spring-boot-starter')
		compile project(":spring-cloud-iot-samples-common")
	}
}

project('spring-cloud-iot-samples-sunfounder-sensor-06-button') {
	description = 'Spring Cloud IoT Sunfounder Sensor Kit Sample 6'
	dependencies {
		compile project(":spring-cloud-iot-core")
		compile project(":spring-cloud-iot-boot")
		compile('org.springframework.boot:spring-boot-starter')
		compile project(":spring-cloud-iot-samples-common")
		runtime('org.springframework.boot:spring-boot-starter-web')
	}
}

project('spring-cloud-iot-samples-sunfounder-sensor-10-passivebuzzer') {
	description = 'Spring Cloud IoT Sunfounder Sensor Kit Sample 10 Passive'
	dependencies {
		compile project(":spring-cloud-iot-core")
		compile project(":spring-cloud-iot-boot")
		compile project(":spring-cloud-iot-pi4j")
		compile('org.springframework.boot:spring-boot-starter')
		compile project(":spring-cloud-iot-samples-common")
		runtime('org.springframework.boot:spring-boot-starter-web')
	}
}

project('spring-cloud-iot-samples-sunfounder-sensor-10-activebuzzer') {
	description = 'Spring Cloud IoT Sunfounder Sensor Kit Sample 10 Active'
	dependencies {
		compile project(":spring-cloud-iot-core")
		compile project(":spring-cloud-iot-boot")
		compile project(":spring-cloud-iot-pi4j")
		compile('org.springframework.boot:spring-boot-starter')
		compile project(":spring-cloud-iot-samples-common")
		runtime('org.springframework.boot:spring-boot-starter-web')
	}
}

project('spring-cloud-iot-samples-sunfounder-sensor-15-joystick') {
	description = 'Spring Cloud IoT Sunfounder Sensor Kit Sample 15'
	dependencies {
		compile project(":spring-cloud-iot-core")
		compile project(":spring-cloud-iot-boot")
		compile project(":spring-cloud-iot-pi4j")
		compile('org.springframework.boot:spring-boot-starter')
		compile project(":spring-cloud-iot-samples-common")
		runtime('org.springframework.boot:spring-boot-starter-web')
	}
}

project('spring-cloud-iot-samples-sunfounder-sensor-16-potentiometer') {
	description = 'Spring Cloud IoT Sunfounder Sensor Kit Sample 16'
	dependencies {
		compile project(":spring-cloud-iot-core")
		compile project(":spring-cloud-iot-boot")
		compile('org.springframework.boot:spring-boot-starter')
		compile project(":spring-cloud-iot-samples-common")
	}
}

project('spring-cloud-iot-samples-sunfounder-sensor-18-thermistor') {
	description = 'Spring Cloud IoT Sunfounder Sensor Kit Sample 18'
	dependencies {
		compile project(":spring-cloud-iot-core")
		compile project(":spring-cloud-iot-boot")
		compile('org.springframework.boot:spring-boot-starter')
		compile project(":spring-cloud-iot-samples-common")
	}
}

project('spring-cloud-iot-samples-sunfounder-sensor-26-ds18b20') {
	description = 'Spring Cloud IoT Sunfounder Sensor Kit Sample 26'
	dependencies {
		compile project(":spring-cloud-iot-core")
		compile project(":spring-cloud-iot-boot")
		compile('org.springframework.boot:spring-boot-starter')
		compile project(":spring-cloud-iot-samples-common")
	}
}

project('spring-cloud-iot-samples-sunfounder-sensor-27-rotaryencoder') {
	description = 'Spring Cloud IoT Sunfounder Sensor Kit Sample 27'
	dependencies {
		compile project(":spring-cloud-iot-core")
		compile project(":spring-cloud-iot-boot")
		compile('org.springframework.boot:spring-boot-starter')
		compile project(":spring-cloud-iot-samples-common")
		runtime('org.springframework.boot:spring-boot-starter-web')
	}
}

project('spring-cloud-iot-samples-sunfounder-sensor-28-humidity') {
	description = 'Spring Cloud IoT Sunfounder Sensor Kit Sample 28'
	dependencies {
		compile project(":spring-cloud-iot-core")
		compile project(":spring-cloud-iot-samples-common")
		compile project(":spring-cloud-iot-boot")
		compile('org.springframework.boot:spring-boot-starter')
		runtime('org.springframework.boot:spring-boot-starter-web')
	}
}

project('spring-cloud-iot-samples-sunfounder-sensor-30-irobstacle') {
	description = 'Spring Cloud IoT Sunfounder Sensor Kit Sample 30'
	dependencies {
		compile project(":spring-cloud-iot-core")
		compile project(":spring-cloud-iot-boot")
		compile('org.springframework.boot:spring-boot-starter')
		compile project(":spring-cloud-iot-samples-common")
	}
}

project('spring-cloud-iot-samples-sunfounder-super-01-led') {
	description = 'Spring Cloud IoT Sunfounder Super Kit Sample 01'
	dependencies {
		compile project(":spring-cloud-iot-core")
		compile project(":spring-cloud-iot-boot")
		compile('org.springframework.boot:spring-boot-starter')
		compile project(":spring-cloud-iot-samples-common")
		runtime('org.springframework.boot:spring-boot-starter-web')
	}
}

project('spring-cloud-iot-samples-sunfounder-super-02-buttonandled') {
	description = 'Spring Cloud IoT Sunfounder Super Kit Sample 02'
	dependencies {
		compile project(":spring-cloud-iot-core")
		compile project(":spring-cloud-iot-boot")
		compile('org.springframework.boot:spring-boot-starter')
		compile project(":spring-cloud-iot-samples-common")
		runtime('org.springframework.boot:spring-boot-starter-web')
	}
}

project('spring-cloud-iot-samples-sunfounder-super-11-segment') {
	description = 'Spring Cloud IoT Sunfounder Super Kit Sample 11 Segment'
	dependencies {
		compile project(":spring-cloud-iot-core")
		compile project(":spring-cloud-iot-boot")
		compile('org.springframework.boot:spring-boot-starter')
		compile project(":spring-cloud-iot-samples-common")
		runtime('org.springframework.boot:spring-boot-starter-web')
	}
}

project('spring-cloud-iot-samples-sunfounder-super-13-dotmatrix') {
	description = 'Spring Cloud IoT Sunfounder Super Kit Sample 13'
	dependencies {
		compile project(":spring-cloud-iot-core")
		compile project(":spring-cloud-iot-boot")
		compile('org.springframework.boot:spring-boot-starter')
		compile project(":spring-cloud-iot-samples-common")
		runtime('org.springframework.boot:spring-boot-starter-web')
	}
}

project('spring-cloud-iot-samples-environmentlcd') {
	description = 'Spring Cloud IoT Environment on LCD Sample'
	dependencies {
		compile project(":spring-cloud-iot-boot")
		compile project(":spring-cloud-iot-core")
		compile project(":spring-cloud-iot-samples-common")
		compile('org.springframework.boot:spring-boot-starter')
		compile('org.springframework.integration:spring-integration-mqtt')
		runtime('org.springframework.boot:spring-boot-starter-web')
	}
}

project('spring-cloud-iot-samples-segment-displays') {
	description = 'Spring Cloud IoT Environment Segment Displays Sample'
	dependencies {
		compile project(":spring-cloud-iot-boot")
		compile project(":spring-cloud-iot-pi4j")
		compile('org.springframework.boot:spring-boot-starter')
		compile project(":spring-cloud-iot-samples-common")
		runtime('org.springframework.boot:spring-boot-starter-web')
	}
}

project('spring-cloud-iot-samples-gateway-server') {
	description = 'Spring Cloud IOT Gateway Server Sample'
	dependencies {
		compile project(":spring-cloud-iot-boot")
		compile('org.springframework.boot:spring-boot-starter')
		compile project(":spring-cloud-iot-gateway")
		runtime('org.springframework.boot:spring-boot-starter-web')
	}
}

project('spring-cloud-iot-samples-gateway-client') {
	description = 'Spring Cloud IOT Gateway Client Sample'
	dependencies {
		compile project(":spring-cloud-iot-boot")
		compile('org.springframework.boot:spring-boot-starter')
		compile project(":spring-cloud-iot-gateway")
		runtime('org.springframework.boot:spring-boot-starter-web')
		runtime('com.google.code.gson:gson')
	}
}

project('spring-cloud-iot-samples-dashboard') {
	description = 'Spring Cloud IOT Dashboard Sample'
	dependencies {
		compile project(":spring-cloud-iot-boot")
		compile('org.springframework.boot:spring-boot-starter')
		compile('org.springframework.integration:spring-integration-mqtt')
		runtime('org.springframework.boot:spring-boot-starter-web')
	}
}

project('spring-cloud-iot-samples-fake-sensor') {
	description = 'Spring Cloud IOT Fake Sensor Sample'
	dependencies {
		compile project(":spring-cloud-iot-boot")
		runtime('org.springframework.boot:spring-boot-starter')
		compile project(":spring-cloud-iot-test")
		compile project(":spring-cloud-iot-boot")
		compile project(":spring-cloud-iot-gateway")
		runtime('org.springframework.boot:spring-boot-starter-web')
	}
}

project('spring-cloud-iot-samples-fake-component') {
	description = 'Spring Cloud IOT Fake Component Sample'
	dependencies {
		compile project(":spring-cloud-iot-boot")
		runtime('org.springframework.boot:spring-boot-starter')
		compile project(":spring-cloud-iot-test")
		compile project(":spring-cloud-iot-boot")
		compile project(":spring-cloud-iot-statemachine")
		runtime('org.springframework.boot:spring-boot-starter-web')
	}
}

project('spring-cloud-iot-samples-xbee-senddata') {
	description = 'Spring Cloud IOT Xbee Send Data Sample'
	dependencies {
		compile project(":spring-cloud-iot-boot")
		runtime('org.springframework.boot:spring-boot-starter')
		compile project(":spring-cloud-iot-xbee")
		runtime('org.springframework.boot:spring-boot-starter-web')
	}
}

project('spring-cloud-iot-samples-xbee-receivedata') {
	description = 'Spring Cloud IOT Xbee Receive Data Sample'
	dependencies {
		compile project(":spring-cloud-iot-boot")
		runtime('org.springframework.boot:spring-boot-starter')
		compile project(":spring-cloud-iot-xbee")
		runtime('org.springframework.boot:spring-boot-starter-web')
	}
}

project('spring-cloud-iot-samples-time-source') {
	description = 'Spring Cloud IOT Stream Time Source Sample'
	dependencyManagement {
		imports {
			mavenBom "org.springframework.cloud.stream.app:time-app-dependencies:${springCloudStreamAppStarterVersion}"
			mavenBom "org.springframework.cloud.stream.app:app-starters-core-dependencies:${springCloudStreamAppStarterVersion}"
		}
	}
	dependencies {
		compile project(":spring-cloud-iot-boot")
		runtime('org.springframework.boot:spring-boot-starter')
		compile project(":spring-cloud-iot-stream-binder-xbee")
		compile('org.springframework.cloud.stream.app:spring-cloud-starter-stream-source-time')
		runtime('org.springframework.boot:spring-boot-starter-web')
	}
}

project('spring-cloud-iot-samples-log-sink') {
	description = 'Spring Cloud IOT Stream Log Sink Sample'
	dependencyManagement {
		imports {
			mavenBom "org.springframework.cloud.stream.app:log-app-dependencies:${springCloudStreamAppStarterVersion}"
			mavenBom "org.springframework.cloud.stream.app:app-starters-core-dependencies:${springCloudStreamAppStarterVersion}"
		}
	}
	dependencies {
		compile project(":spring-cloud-iot-boot")
		runtime('org.springframework.boot:spring-boot-starter')
		compile project(":spring-cloud-iot-stream-binder-xbee")
		compile('org.springframework.cloud.stream.app:spring-cloud-starter-stream-sink-log')
		runtime('org.springframework.boot:spring-boot-starter-web')
	}
}

project('spring-cloud-iot-samples-game-buttons') {
	description = 'Spring Cloud IOT Buttons Game Sample'
	dependencies {
		compile project(":spring-cloud-iot-boot")
		runtime('org.springframework.boot:spring-boot-starter')
		compile project(":spring-cloud-iot-test")
		compile project(":spring-cloud-iot-boot")
		compile project(":spring-cloud-iot-statemachine")
		runtime('org.springframework.boot:spring-boot-starter-web')
		testCompile('org.springframework.boot:spring-boot-starter-test')
		testCompile('org.springframework.statemachine:spring-statemachine-test')
	}
}

project('spring-cloud-iot-samples-coap-server') {
	description = 'Spring Cloud IOT Coap Server Sample'
	dependencies {
		compile project(":spring-cloud-iot-coap")
		compile('org.springframework.boot:spring-boot-starter')
		runtime project(":spring-cloud-iot-boot")
	}
}

