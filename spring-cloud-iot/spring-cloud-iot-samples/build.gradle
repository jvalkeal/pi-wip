description = 'Spring Cloud IOT Samples Common'

configurations.archives.artifacts.removeAll { it.archiveTask.is jar }
tasks.findByPath("artifactoryPublish")?.enabled = false

project('spring-cloud-iot-samples-sunfounder-sensor-01') {
	apply plugin: 'org.springframework.boot'
	description = 'Spring Cloud IoT Sunfounder Sensor Kit Sample 1'
	dependencies {
		compile project(":spring-cloud-iot-samples-common")
	}
}

project('spring-cloud-iot-samples-sunfounder-sensor-04') {
	apply plugin: 'org.springframework.boot'
	description = 'Spring Cloud IoT Sunfounder Sensor Kit Sample 4'
	dependencies {
		compile project(":spring-cloud-iot-samples-common")
	}
}

project('spring-cloud-iot-samples-sunfounder-sensor-06') {
	apply plugin: 'org.springframework.boot'
	description = 'Spring Cloud IoT Sunfounder Sensor Kit Sample 6'
	dependencies {
		compile project(":spring-cloud-iot-samples-common")
		runtime('org.springframework.boot:spring-boot-starter-web')
	}
}

project('spring-cloud-iot-samples-sunfounder-sensor-16') {
	apply plugin: 'org.springframework.boot'
	description = 'Spring Cloud IoT Sunfounder Sensor Kit Sample 16'
	dependencies {
		compile project(":spring-cloud-iot-samples-common")
	}
}

project('spring-cloud-iot-samples-sunfounder-sensor-18') {
	apply plugin: 'org.springframework.boot'
	description = 'Spring Cloud IoT Sunfounder Sensor Kit Sample 18'
	dependencies {
		compile project(":spring-cloud-iot-samples-common")
	}
}

project('spring-cloud-iot-samples-sunfounder-sensor-26') {
	apply plugin: 'org.springframework.boot'
	description = 'Spring Cloud IoT Sunfounder Sensor Kit Sample 26'
	dependencies {
		compile project(":spring-cloud-iot-samples-common")
	}
}

project('spring-cloud-iot-samples-sunfounder-sensor-27') {
	apply plugin: 'org.springframework.boot'
	description = 'Spring Cloud IoT Sunfounder Sensor Kit Sample 27'
	dependencies {
		compile project(":spring-cloud-iot-samples-common")
		runtime('org.springframework.boot:spring-boot-starter-web')
	}
}

project('spring-cloud-iot-samples-sunfounder-sensor-30') {
	apply plugin: 'org.springframework.boot'
	description = 'Spring Cloud IoT Sunfounder Sensor Kit Sample 30'
	dependencies {
		compile project(":spring-cloud-iot-samples-common")
	}
}

project('spring-cloud-iot-samples-sunfounder-super-11-segment') {
	apply plugin: 'org.springframework.boot'
	description = 'Spring Cloud IoT Sunfounder Super Kit Sample 11 Segment'
	dependencies {
		compile project(":spring-cloud-iot-samples-common")
		runtime('org.springframework.boot:spring-boot-starter-web')
	}
}

project('spring-cloud-iot-samples-temperaturelcd') {
	apply plugin: 'org.springframework.boot'
	description = 'Spring Cloud IoT Temperature on LCD Sample'
	dependencies {
		compile project(":spring-cloud-iot-samples-common")
		compile('org.springframework.integration:spring-integration-mqtt')
		runtime('org.springframework.boot:spring-boot-starter-web')
	}
}

project('spring-cloud-iot-samples-gateway') {
	apply plugin: 'org.springframework.boot'
	description = 'Spring Cloud IOT Gateway Server Sample'
	dependencies {
		compile project(":spring-cloud-iot-gateway")
		runtime('org.springframework.boot:spring-boot-starter-web')
	}
}

project('spring-cloud-iot-samples-fake-sensor') {
	apply plugin: 'org.springframework.boot'
	description = 'Spring Cloud IOT Fake Sensor Sample'
	dependencies {
		compile project(":spring-cloud-iot-boot")
		compile project(":spring-cloud-iot-gateway")
		runtime('org.springframework.boot:spring-boot-starter-web')
	}
}

